function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { DatasourceType } from './types/Datasource';
export default class DatasourceKey {
  constructor(key) {
    _defineProperty(this, "id", void 0);

    _defineProperty(this, "type", void 0);

    const [idStr, typeStr] = key.split('__');
    this.id = parseInt(idStr, 10);
    this.type = typeStr === 'table' ? DatasourceType.Table : DatasourceType.Druid;
  }

  toString() {
    return this.id + "__" + this.type;
  }

  toObject() {
    return {
      id: this.id,
      type: this.type
    };
  }

}