function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { SupersetClient } from '../../../connection';
export default function getDatasourceMetadata({
  client = SupersetClient,
  datasourceKey,
  requestConfig
}) {
  return client.get(_extends({
    endpoint: "/superset/fetch_datasource_metadata?datasourceKey=" + datasourceKey
  }, requestConfig)).then(response => response.json);
}