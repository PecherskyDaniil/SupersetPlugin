"use strict";
const core_1 = require("@beemo/core");
const nimbus_common_1 = require("@airbnb/nimbus-common");
const config = {
    root: true,
    parser: 'babel-eslint',
    parserOptions: {
        requireConfigFile: false,
    },
    extends: ['airbnb', 'plugin:jsx-a11y/recommended'],
    plugins: ['import', 'react', 'react-hooks'],
    globals: {
        __DEV__: 'readonly',
        // Metrics and analytics providers
        ga: 'readonly',
        newrelic: 'readonly',
        // Mostly for easier compatibility between browsers, workers, etc
        global: 'readonly',
        // Mostly references to `process.env.NODE_ENV`
        process: 'readonly',
    },
    env: {
        browser: true,
        node: false,
    },
    reportUnusedDisableDirectives: true,
    settings: {
        propWrapperFunctions: ['forbidExtraProps', 'exact', 'Object.freeze'],
        'import/ignore': ['node_modules', '\\.json$', nimbus_common_1.ASSET_EXT_PATTERN.source, nimbus_common_1.GQL_EXT_PATTERN.source],
        'import/extensions': nimbus_common_1.EXTS,
        'import/resolver': {
            node: {
                extensions: nimbus_common_1.EXTS,
            },
            [core_1.Path.resolve('../resolvers/graphql.js', __dirname).path()]: {
                extensions: ['.gql', '.graphql'],
            },
        },
    },
    rules: {
        'react-hooks/exhaustive-deps': 'error',
        'react-hooks/rules-of-hooks': 'error',
    },
    overrides: [
        {
            files: [`*.test.${nimbus_common_1.EXTS_GROUP}`],
            plugins: ['jest'],
            globals: {
                jsdom: 'readonly',
            },
            env: {
                jest: true,
                node: true,
            },
            rules: {
                'max-classes-per-file': 'off',
                'no-magic-numbers': 'off',
                'sort-keys': 'off',
                // JEST
                'jest/expect-expect': 'error',
                'jest/no-alias-methods': 'error',
                'jest/no-disabled-tests': 'error',
                'jest/no-duplicate-hooks': 'error',
                'jest/no-expect-resolves': 'error',
                'jest/no-export': 'error',
                'jest/no-focused-tests': 'error',
                'jest/no-identical-title': 'error',
                'jest/no-if': 'error',
                'jest/no-jasmine-globals': 'error',
                'jest/no-jest-import': 'error',
                'jest/no-standalone-expect': 'error',
                'jest/no-test-callback': 'error',
                'jest/no-test-prefixes': 'error',
                'jest/no-test-return-statement': 'error',
                'jest/prefer-hooks-on-top': 'error',
                'jest/prefer-spy-on': 'error',
                'jest/prefer-todo': 'error',
                'jest/prefer-to-be-null': 'error',
                'jest/prefer-to-be-undefined': 'error',
                'jest/prefer-to-contain': 'error',
                'jest/prefer-to-have-length': 'error',
                'jest/require-to-throw-message': 'error',
                'jest/require-top-level-describe': 'error',
                'jest/valid-describe': 'error',
                'jest/valid-expect': 'error',
                'jest/valid-title': 'error',
            },
        },
    ],
};
module.exports = config;
